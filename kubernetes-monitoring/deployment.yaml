---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-nfs-002
  namespace: monitoring
spec:
  storageClassName: "nfs-csi"
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: staticweb
data:
  default.conf: |
      server {
          listen       80;
          server_name  _;
          access_log /dev/stdout main;
          error_log /dev/stdout info;
          root   /homework;
          index  index.html;
          location /status {
              stub_status on;
          }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: staticweb-deployment
  namespace: monitoring
  labels:
    app.kubernetes.io/name: staticweb
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: staticweb
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      name: staticweb
      namespace: monitoring
      labels:
        app.kubernetes.io/name: staticweb
    spec:
      securityContext:
        #runAsUser: 1000  # all processes in container uid
        #runAsGroup: 2000 # all processes in container group id
        fsGroup: 3000    # group id who owns files of mounted volumes
        # inside container uid=1000 gid=2000 groups=3000
        fsGroupChangePolicy: "OnRootMismatch"
      nodeSelector:
        homework: "true"
      containers:
      - name: nginx
        image: nginx:mainline-alpine
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: staticweb-port
          containerPort: 80
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c","rm -rf /homework/index.html"]
        volumeMounts:
        - name: vhost-server-conf
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
          subPath: default.conf
        - name: shared
          mountPath: /homework
          readOnly: false
        readinessProbe:
          httpGet:
            path: /index.html
            port: staticweb-port
            httpHeaders:
            - name: X-Readiness-Probe
              value: k8s-local
          initialDelaySeconds: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /index.html
            port: staticweb-port
            httpHeaders:
            - name: K8SHealthChecker
              value: LivenessProbe
          initialDelaySeconds: 5
          periodSeconds: 3
      initContainers:
      - name: indexgenerator
        image: alpine:latest
        securityContext:
          allowPrivilegeEscalation: false
        command: ["/bin/ash"]
        args:
          - -c
          - echo "i am index.html" > /init/index.html
        volumeMounts:
        - name: shared
          mountPath: "/init"
      volumes:
      - name: vhost-server-conf
        configMap:
          name: nginx-config
          items:
            - key: "default.conf"
              path: "default.conf"
      - name: shared
        persistentVolumeClaim:
          claimName: "pvc-nfs-002"
---
apiVersion: v1
kind: Service
metadata:
  name: staticweb
  namespace: monitoring
  labels:
    app.kubernetes.io/name: staticweb
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: staticweb
  ports:
  - name: static-web-svc-port
    protocol: TCP
    port: 6081
    targetPort: staticweb-port
